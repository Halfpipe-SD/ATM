{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ATM Dokumentation Startseite Abstract abstract text Das Team Wir sind die Panzerknacker. Mitglied Spezialisierung Mich\u00e9l Franz UX Juri Kaemper Text & QS Christian Lop\u00e9z Programmierung Felix M\u00f6hler Requirements Engineering Julian Thiele UML/Kollab.-Werkzeug, Entwicklungsumgebung","title":"Startseite"},{"location":"#atm-dokumentation-startseite","text":"","title":"ATM Dokumentation Startseite"},{"location":"#abstract","text":"abstract text","title":"Abstract"},{"location":"#das-team","text":"Wir sind die Panzerknacker. Mitglied Spezialisierung Mich\u00e9l Franz UX Juri Kaemper Text & QS Christian Lop\u00e9z Programmierung Felix M\u00f6hler Requirements Engineering Julian Thiele UML/Kollab.-Werkzeug, Entwicklungsumgebung","title":"Das Team"},{"location":"acceptance-docs/","text":"Abnahmedokumentation coming soon","title":"Abnahmedokumentation"},{"location":"acceptance-docs/#abnahmedokumentation","text":"coming soon","title":"Abnahmedokumentation"},{"location":"architecture-docs/","text":"Architekturdokumentation coming soon","title":"Architekturdokumentation"},{"location":"architecture-docs/#architekturdokumentation","text":"coming soon","title":"Architekturdokumentation"},{"location":"project-docs/","text":"Projektdokumentation coming soon","title":"Projektdokumentation"},{"location":"project-docs/#projektdokumentation","text":"coming soon","title":"Projektdokumentation"},{"location":"requirements-docs/","text":"Anforderungsdokumentation Produktvision und Produktziele Produktvision Eine regionale Bank hat unser externes Software-Entwicklerteam f\u00fcr einen Auftrag eingestellt. Bei dem uns \u00fcbertragenem Projekt handelt es sich um die fehlerhafte Software einer ATM (Automated Teller Machine) zu deutsch Bankautomat. Der bereits existente Programmcode wurde von einem externen Unternehmen entwickelt, so dass der Kunde kein Expertenwissen zum Programm verf\u00fcgt, au\u00dferdem fehlt auch die Dokumentation vollst\u00e4ndig. Um dem Bankunternehmen nun die Verwendung des Systems zu erm\u00f6glichen, muss das Programm komplett \u00fcberarbeitet werden, dar\u00fcber hinaus soll eine detaillierte Dokumentation (vollst\u00e4ndig in deutsch) f\u00fcr die Bank erstellt werden. Das fehlerfreie Programm mit den bereits integrierten Features und einer strukturierten Dokumentation ist unser Basisfaktor. Das Programm ist f\u00fcr die Bankautomaten der Bank in Deutschland vorgesehen. Die Dokumentation soll die Entwicklung sowie die Funktionen der Software zusammenfassen und den zust\u00e4ndigen Mitarbeiter verst\u00e4ndlich machen. Produktziele Die Aufgabe unseres Teams ist es den bereits vorhandenen Code so zu \u00fcberarbeiten, dass dieser voll funktionsf\u00e4hig ist und eine sichere Laufzeit gew\u00e4hrleistet werden kann. Zur Entwicklung der Software ist eine vollst\u00e4ndig deutsche Dokumentation vorgesehen mit Anforderungs -, Architektur -, Test -, Abnahme -, Benutzer -, Projekt -, und Codedokumentation . Rollen und Personas Rollen Rollen Beschreibung Benutzer Die Benutzer sind Kunden der Bank, die den Geldautomaten zur Verf\u00fcgung stellt Administrator Administratoren des Bankautomatensystems, die Verwaltungsrechte \u00fcber alle Benutzer besitzen Personas Name Gertrude Gabel Rolle Benutzer Alter 65 Geschlecht weiblich T\u00e4tigkeit Rentnerin Familienstand verheiratet Bildung Mittelschule Computerkenntnisse Keine Interessen und Hobbies Wandern, Kaffee trinken Einstellung zum Produkt \"Eine tolle Maschine, tut was sie soll\" W\u00fcnsche Einfache Bedienung, wenig zum Merken Name Peter Pecks Rolle Benutzer Alter 38 Geschlecht m\u00e4nnlich T\u00e4tigkeit Handwerker Familienstand verheiratet Bildung Realschule Computerkenntnisse Grundkenntnisse Interessen und Hobbies Autos, Actionfilme, Fahrradfahren Einstellung zum Produkt \"Hoffentlich werden die neuen Geldautomaten besser\" W\u00fcnsche N\u00fctzliche Funktionen, Schnelle Bedienbarkeit Name Andy Auman Rolle Administrator Alter 29 Geschlecht m\u00e4nnlich T\u00e4tigkeit Systemadministrator Familienstand ledig Bildung Abitur Computerkenntnisse Fachkenntnisse Interessen und Hobbies Programmierung, Netzwerke, Gaming Einstellung zum Produkt \"\" W\u00fcnsche Viele Funktionen, Wenig Konfigurationsaufwand User Stories Als [Rolle] m\u00f6chte ich [Ziel/Wunsch] , um [Nutzen] Als Benutzer m\u00f6chte ich verschiedene Geldbetr\u00e4ge eingeben , um diese abzuheben Als Benutzer m\u00f6chte ich sehen, wie viel Geld auf meinem Konto ist, um zu wissen, wie viel ich noch abheben kann Als Benutzer m\u00f6chte ich eine vierstellige Pin zu meiner Karte eingeben m\u00fcssen , um zu wissen, dass mein Bankkonto sicher ist Als Benutzer m\u00f6chte ich eine St\u00fcckelung ausw\u00e4hlen k\u00f6nnen, um gew\u00fcnschte Scheine zu erhalten Als Benutzer m\u00f6chte ich mich einloggen k\u00f6nnen , um get\u00e4tigte Transaktionen zu sehen Als Administrator der Bank m\u00f6chte ich eine vollst\u00e4ndige und detaillierte Dokumentation , um im Fehlerfall schnell handeln zu k\u00f6nnen Aufgaben coming soon Begriffslexikon Begriff Bedeutung Cash Dispenser Bargeld im ATM-Dispenser Deposit Slot Geldfach zum Ein- und Auszahlen Balance Ist-Saldo auf einem Account Withdrawal Geld abheben Account Pin Geheimpin eines Accounts (unique) Account number Nummer eines Accounts (unique) Credit Gutschrift Debit Lastschrift Mengenger\u00fcst Mengenger\u00fcst Stichpunkte: Pin-L\u00e4nge: Immer genau 4 Stellen Maximaler Betrag pro Account an einem Tag abheben: 1000\u20ac? Maximale Nutzer gleichzeitig: ??? Maximale Transaktionen pro Minute: ??? Maximal registrierte Nutzer: ??? Use Cases coming soon","title":"Anforderungsdokumentation"},{"location":"requirements-docs/#anforderungsdokumentation","text":"","title":"Anforderungsdokumentation"},{"location":"requirements-docs/#produktvision-und-produktziele","text":"","title":"Produktvision und Produktziele"},{"location":"requirements-docs/#produktvision","text":"Eine regionale Bank hat unser externes Software-Entwicklerteam f\u00fcr einen Auftrag eingestellt. Bei dem uns \u00fcbertragenem Projekt handelt es sich um die fehlerhafte Software einer ATM (Automated Teller Machine) zu deutsch Bankautomat. Der bereits existente Programmcode wurde von einem externen Unternehmen entwickelt, so dass der Kunde kein Expertenwissen zum Programm verf\u00fcgt, au\u00dferdem fehlt auch die Dokumentation vollst\u00e4ndig. Um dem Bankunternehmen nun die Verwendung des Systems zu erm\u00f6glichen, muss das Programm komplett \u00fcberarbeitet werden, dar\u00fcber hinaus soll eine detaillierte Dokumentation (vollst\u00e4ndig in deutsch) f\u00fcr die Bank erstellt werden. Das fehlerfreie Programm mit den bereits integrierten Features und einer strukturierten Dokumentation ist unser Basisfaktor. Das Programm ist f\u00fcr die Bankautomaten der Bank in Deutschland vorgesehen. Die Dokumentation soll die Entwicklung sowie die Funktionen der Software zusammenfassen und den zust\u00e4ndigen Mitarbeiter verst\u00e4ndlich machen.","title":"Produktvision"},{"location":"requirements-docs/#produktziele","text":"Die Aufgabe unseres Teams ist es den bereits vorhandenen Code so zu \u00fcberarbeiten, dass dieser voll funktionsf\u00e4hig ist und eine sichere Laufzeit gew\u00e4hrleistet werden kann. Zur Entwicklung der Software ist eine vollst\u00e4ndig deutsche Dokumentation vorgesehen mit Anforderungs -, Architektur -, Test -, Abnahme -, Benutzer -, Projekt -, und Codedokumentation .","title":"Produktziele"},{"location":"requirements-docs/#rollen-und-personas","text":"","title":"Rollen und Personas"},{"location":"requirements-docs/#rollen","text":"Rollen Beschreibung Benutzer Die Benutzer sind Kunden der Bank, die den Geldautomaten zur Verf\u00fcgung stellt Administrator Administratoren des Bankautomatensystems, die Verwaltungsrechte \u00fcber alle Benutzer besitzen","title":"Rollen"},{"location":"requirements-docs/#personas","text":"Name Gertrude Gabel Rolle Benutzer Alter 65 Geschlecht weiblich T\u00e4tigkeit Rentnerin Familienstand verheiratet Bildung Mittelschule Computerkenntnisse Keine Interessen und Hobbies Wandern, Kaffee trinken Einstellung zum Produkt \"Eine tolle Maschine, tut was sie soll\" W\u00fcnsche Einfache Bedienung, wenig zum Merken Name Peter Pecks Rolle Benutzer Alter 38 Geschlecht m\u00e4nnlich T\u00e4tigkeit Handwerker Familienstand verheiratet Bildung Realschule Computerkenntnisse Grundkenntnisse Interessen und Hobbies Autos, Actionfilme, Fahrradfahren Einstellung zum Produkt \"Hoffentlich werden die neuen Geldautomaten besser\" W\u00fcnsche N\u00fctzliche Funktionen, Schnelle Bedienbarkeit Name Andy Auman Rolle Administrator Alter 29 Geschlecht m\u00e4nnlich T\u00e4tigkeit Systemadministrator Familienstand ledig Bildung Abitur Computerkenntnisse Fachkenntnisse Interessen und Hobbies Programmierung, Netzwerke, Gaming Einstellung zum Produkt \"\" W\u00fcnsche Viele Funktionen, Wenig Konfigurationsaufwand","title":"Personas"},{"location":"requirements-docs/#user-stories","text":"Als [Rolle] m\u00f6chte ich [Ziel/Wunsch] , um [Nutzen] Als Benutzer m\u00f6chte ich verschiedene Geldbetr\u00e4ge eingeben , um diese abzuheben Als Benutzer m\u00f6chte ich sehen, wie viel Geld auf meinem Konto ist, um zu wissen, wie viel ich noch abheben kann Als Benutzer m\u00f6chte ich eine vierstellige Pin zu meiner Karte eingeben m\u00fcssen , um zu wissen, dass mein Bankkonto sicher ist Als Benutzer m\u00f6chte ich eine St\u00fcckelung ausw\u00e4hlen k\u00f6nnen, um gew\u00fcnschte Scheine zu erhalten Als Benutzer m\u00f6chte ich mich einloggen k\u00f6nnen , um get\u00e4tigte Transaktionen zu sehen Als Administrator der Bank m\u00f6chte ich eine vollst\u00e4ndige und detaillierte Dokumentation , um im Fehlerfall schnell handeln zu k\u00f6nnen","title":"User Stories"},{"location":"requirements-docs/#aufgaben","text":"coming soon","title":"Aufgaben"},{"location":"requirements-docs/#begriffslexikon","text":"Begriff Bedeutung Cash Dispenser Bargeld im ATM-Dispenser Deposit Slot Geldfach zum Ein- und Auszahlen Balance Ist-Saldo auf einem Account Withdrawal Geld abheben Account Pin Geheimpin eines Accounts (unique) Account number Nummer eines Accounts (unique) Credit Gutschrift Debit Lastschrift","title":"Begriffslexikon"},{"location":"requirements-docs/#mengengerust","text":"Mengenger\u00fcst Stichpunkte: Pin-L\u00e4nge: Immer genau 4 Stellen Maximaler Betrag pro Account an einem Tag abheben: 1000\u20ac? Maximale Nutzer gleichzeitig: ??? Maximale Transaktionen pro Minute: ??? Maximal registrierte Nutzer: ???","title":"Mengenger\u00fcst"},{"location":"requirements-docs/#use-cases","text":"coming soon","title":"Use Cases"},{"location":"test-docs/","text":"Testdokumentation coming soon","title":"Testdokumentation"},{"location":"test-docs/#testdokumentation","text":"coming soon","title":"Testdokumentation"},{"location":"user-docs/","text":"Benutzerdokumentation coming soon","title":"Benutzerdokumentation"},{"location":"user-docs/#benutzerdokumentation","text":"coming soon","title":"Benutzerdokumentation"},{"location":"codedocs/delta-docs/","text":"Delta-Dokumentation Verbesserungsvorschl\u00e4ge Pin-Authentifizierung beim Login Login mit Accountnummer? L\u00e4nge des PIN`s? \"Exit\" schlie\u00dft das Programm Verbesserung des Event-Handlings mit Actionlisteners Verbeserung der Klassenstruktur (weniger Klassen?) Verbesserung des UI-Handlings mit JFrame und JPanel Verbesserung der CashDispenser-Funktion Bankautomat in Deutsch oder Englisch Lizens nur 1x erw\u00e4hnen","title":"Delta-Dokumentation"},{"location":"codedocs/delta-docs/#delta-dokumentation","text":"","title":"Delta-Dokumentation"},{"location":"codedocs/delta-docs/#verbesserungsvorschlage","text":"Pin-Authentifizierung beim Login Login mit Accountnummer? L\u00e4nge des PIN`s? \"Exit\" schlie\u00dft das Programm Verbesserung des Event-Handlings mit Actionlisteners Verbeserung der Klassenstruktur (weniger Klassen?) Verbesserung des UI-Handlings mit JFrame und JPanel Verbesserung der CashDispenser-Funktion Bankautomat in Deutsch oder Englisch Lizens nur 1x erw\u00e4hnen","title":"Verbesserungsvorschl\u00e4ge"},{"location":"codedocs/is-docs/","text":"Code Ist-Dokumentation Klassen ATMCaseStudy.java Erstellt eine ATM Instanz und startet diese, wenn noch keine vorhanden ATM.java Stellt die Hauptklasse des ATMs dar Initialisiert UI mit Keypad, CashDispenser, DepositSlot und Bankdatabase Es gibt viele unbenutzte konstante int Variablen Sobald Enter bet\u00e4tigt wird, wird die PIN \u00fcberpr\u00fcft (login) Wenn man eingeloggt ist, wird das Men\u00fc angezeigt, wenn man als Admin eingeloggt ist, wird das Admin-Men\u00fc angezeigt Im Men\u00fc kann man nun zwischen Funktionen w\u00e4hlen: balance : Eigenes Guthaben anzeigen withdrawal : Geld abheben, indem man die Scheine einzeln w\u00e4hlt deposit : Geld einzahlen. Geld ist erst verf\u00fcgbar, wenn \u00fcberpr\u00fcft. exit : F\u00fchrt Login erneut aus, \u00f6ffnet allerdings neues Fenster Sollte man als Admin angemeldet sein, \u00f6ffnet sich die Adminoberfl\u00e4che mit diesen Funktionen: Kontostand jedes Nutzers einsehen Zwischen Accounts wecheln Accounts l\u00f6schen Neue Accounts hinzuf\u00fcgen Transaction.java Abstrakte Klasse, die mit einer AccountNummer, Dem Screen-Objekt und dem BankDatabase-Objekt initialisiert wird. BalanceInquiry.java Erbt von Transactions und \u00fcberschreibt die Execute-Funktion Die Execute-Funktion gibt den Kontostand auf dem Screen aus Withdrawal.java Erbt von Transactions und \u00fcberschreibt die Execute-Funktion Die Execute-Funktion zeigt die Buttons zur Scheinauswahl an Die Transaction-Funktion erm\u00f6glicht das abheben von Geld, wenn noch gen\u00fcgend auf dem Konto und im CashDispenser verf\u00fcgbar ist. Man kann nur in 20er Scheinen abheben Deposit.java Erbt von Transactions und \u00fcberschreibt die Execute-Funktion Die Execute-Funktion zeigt UI zum Geldeinzahlen an Beim Geldeinzahlen wird gepr\u00fcft, ob das Geld eingezahlt wurde DepositSlot.java Klasse ist nicht vorhanden. Hier sollte \u00fcberpr\u00fcft werden, ob das Geld vorhanden ist CashDispenser.java Startet mit 500 20$ Scheinen BankDatabase.java Initialisiert alle Accounts Authentifiziert Nutzer anhand der PIN Funktionen um anhand der AccountNumber Daten \u00fcber den Account abzurufen (verf\u00fcgbares Guthaben, etc) Besitzt Funktionen um Guthaben von Accounts abzuziehen oder aufzuladen Fehler: getaccpin funktioniert nicht Funktion um tempor\u00e4r einen Account zu erstellen und dem Account-Array hinzuzuf\u00fcgen Funktion um tempor\u00e4r einen Account zu l\u00f6schen Account.java Besitzt Eigenschaften eines Benutzers Funktion um Pin mit aktuellem Account zu verifizieren Getter und Setter AccountFactory.java Wird nicht verwendet Erbt von Account, initialisiert einen Account Iterator Interface, das zwei Funktionen beinhaltet, die einen Wahrheitswert zur\u00fcckgeben, ob von der aktuellen Position ein n\u00e4chstes oder vorheriges Element existiert Funktion, die ein Objekt zur\u00fcck gibt, anhand einer Position AccountIterator.java Implementiert das Iterator Interface und \u00fcberschreibt dessen Funktionen Screen.java JFrame-Komponente, die Textfelder, Labels und Buttons besitzt Besitzt Funktionen um Nachrichten in der Konsole auszugeben Besitzt Funktionen um UI-Elemente anzuzeigen: Login Men\u00fc Kontostand Geldauszahlung Geldeinzahlung Admin-Ansicht Keypad.java Besitzt unbenutze Scanner-Funktion Besitzt JButtons f\u00fcr ein Tastenfeld mit L\u00f6schen und Enter Funktionen Funktion um ein JPanel mit Buttons zu initialisieren und zur\u00fcckgeben Fehler: Endlos-Schleife userinput()","title":"Ist-Dokumentation"},{"location":"codedocs/is-docs/#code-ist-dokumentation","text":"","title":"Code Ist-Dokumentation"},{"location":"codedocs/is-docs/#klassen","text":"ATMCaseStudy.java Erstellt eine ATM Instanz und startet diese, wenn noch keine vorhanden ATM.java Stellt die Hauptklasse des ATMs dar Initialisiert UI mit Keypad, CashDispenser, DepositSlot und Bankdatabase Es gibt viele unbenutzte konstante int Variablen Sobald Enter bet\u00e4tigt wird, wird die PIN \u00fcberpr\u00fcft (login) Wenn man eingeloggt ist, wird das Men\u00fc angezeigt, wenn man als Admin eingeloggt ist, wird das Admin-Men\u00fc angezeigt Im Men\u00fc kann man nun zwischen Funktionen w\u00e4hlen: balance : Eigenes Guthaben anzeigen withdrawal : Geld abheben, indem man die Scheine einzeln w\u00e4hlt deposit : Geld einzahlen. Geld ist erst verf\u00fcgbar, wenn \u00fcberpr\u00fcft. exit : F\u00fchrt Login erneut aus, \u00f6ffnet allerdings neues Fenster Sollte man als Admin angemeldet sein, \u00f6ffnet sich die Adminoberfl\u00e4che mit diesen Funktionen: Kontostand jedes Nutzers einsehen Zwischen Accounts wecheln Accounts l\u00f6schen Neue Accounts hinzuf\u00fcgen Transaction.java Abstrakte Klasse, die mit einer AccountNummer, Dem Screen-Objekt und dem BankDatabase-Objekt initialisiert wird. BalanceInquiry.java Erbt von Transactions und \u00fcberschreibt die Execute-Funktion Die Execute-Funktion gibt den Kontostand auf dem Screen aus Withdrawal.java Erbt von Transactions und \u00fcberschreibt die Execute-Funktion Die Execute-Funktion zeigt die Buttons zur Scheinauswahl an Die Transaction-Funktion erm\u00f6glicht das abheben von Geld, wenn noch gen\u00fcgend auf dem Konto und im CashDispenser verf\u00fcgbar ist. Man kann nur in 20er Scheinen abheben Deposit.java Erbt von Transactions und \u00fcberschreibt die Execute-Funktion Die Execute-Funktion zeigt UI zum Geldeinzahlen an Beim Geldeinzahlen wird gepr\u00fcft, ob das Geld eingezahlt wurde DepositSlot.java Klasse ist nicht vorhanden. Hier sollte \u00fcberpr\u00fcft werden, ob das Geld vorhanden ist CashDispenser.java Startet mit 500 20$ Scheinen BankDatabase.java Initialisiert alle Accounts Authentifiziert Nutzer anhand der PIN Funktionen um anhand der AccountNumber Daten \u00fcber den Account abzurufen (verf\u00fcgbares Guthaben, etc) Besitzt Funktionen um Guthaben von Accounts abzuziehen oder aufzuladen Fehler: getaccpin funktioniert nicht Funktion um tempor\u00e4r einen Account zu erstellen und dem Account-Array hinzuzuf\u00fcgen Funktion um tempor\u00e4r einen Account zu l\u00f6schen Account.java Besitzt Eigenschaften eines Benutzers Funktion um Pin mit aktuellem Account zu verifizieren Getter und Setter AccountFactory.java Wird nicht verwendet Erbt von Account, initialisiert einen Account Iterator Interface, das zwei Funktionen beinhaltet, die einen Wahrheitswert zur\u00fcckgeben, ob von der aktuellen Position ein n\u00e4chstes oder vorheriges Element existiert Funktion, die ein Objekt zur\u00fcck gibt, anhand einer Position AccountIterator.java Implementiert das Iterator Interface und \u00fcberschreibt dessen Funktionen Screen.java JFrame-Komponente, die Textfelder, Labels und Buttons besitzt Besitzt Funktionen um Nachrichten in der Konsole auszugeben Besitzt Funktionen um UI-Elemente anzuzeigen: Login Men\u00fc Kontostand Geldauszahlung Geldeinzahlung Admin-Ansicht Keypad.java Besitzt unbenutze Scanner-Funktion Besitzt JButtons f\u00fcr ein Tastenfeld mit L\u00f6schen und Enter Funktionen Funktion um ein JPanel mit Buttons zu initialisieren und zur\u00fcckgeben Fehler: Endlos-Schleife userinput()","title":"Klassen"}]}